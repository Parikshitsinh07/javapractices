/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.85
 * Generated at: 2024-04-14 07:36:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.eleventhapplication.CalculatorBean;

public final class calculate_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.eleventhapplication.CalculatorBean");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      com.eleventhapplication.CalculatorBean calculator = null;
      calculator = (com.eleventhapplication.CalculatorBean) _jspx_page_context.getAttribute("calculator", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (calculator == null){
        calculator = new com.eleventhapplication.CalculatorBean();
        _jspx_page_context.setAttribute("calculator", calculator, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta charset=\"UTF-8\">\n");
      out.write("        <title>Calculator Result</title>\n");
      out.write("        <style>\n");
      out.write("            body {\n");
      out.write("                font-family: 'Roboto', sans-serif; /* Change font family */\n");
      out.write("                color: #333; /* Change text color */\n");
      out.write("            }\n");
      out.write("            .container {\n");
      out.write("                max-width: 400px;\n");
      out.write("                margin: 0 auto;\n");
      out.write("                padding: 20px;\n");
      out.write("                border: 1px solid #ccc;\n");
      out.write("                border-radius: 5px;\n");
      out.write("                background-color: #f9f9f9;\n");
      out.write("                box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\n");
      out.write("            }\n");
      out.write("            h1 {\n");
      out.write("                text-align: center;\n");
      out.write("                color: #333;\n");
      out.write("            }\n");
      out.write("            table {\n");
      out.write("                width: 100%;\n");
      out.write("            }\n");
      out.write("            table td {\n");
      out.write("                padding: 10px;\n");
      out.write("            }\n");
      out.write("            .custom-radio {\n");
      out.write("                display: flex;\n");
      out.write("                align-items: center;\n");
      out.write("            }\n");
      out.write("            .custom-radio input[type=\"radio\"] {\n");
      out.write("                display: none;\n");
      out.write("            }\n");
      out.write("            .custom-radio label {\n");
      out.write("                display: inline-block;\n");
      out.write("                width: 30px;\n");
      out.write("                height: 30px;\n");
      out.write("                line-height: 30px;\n");
      out.write("                text-align: center;\n");
      out.write("                border: 1px solid #ccc;\n");
      out.write("                border-radius: 50%;\n");
      out.write("                cursor: pointer;\n");
      out.write("            }\n");
      out.write("            .custom-radio input[type=\"radio\"]:checked + label {\n");
      out.write("                background-color: #4caf50;\n");
      out.write("                color: white;\n");
      out.write("            }\n");
      out.write("            .btn-container {\n");
      out.write("                text-align: center;\n");
      out.write("            }\n");
      out.write("            .btn-container button {\n");
      out.write("                padding: 10px 20px;\n");
      out.write("                background-color: #4caf50;\n");
      out.write("                color: white;\n");
      out.write("                border: none;\n");
      out.write("                border-radius: 5px;\n");
      out.write("                cursor: pointer;\n");
      out.write("                font-size: 16px;\n");
      out.write("            }\n");
      out.write("            .btn-container button:hover {\n");
      out.write("                background-color: #45a049;\n");
      out.write("            }\n");
      out.write("            .error-message {\n");
      out.write("                color: red;\n");
      out.write("                font-size: 14px;\n");
      out.write("                margin-top: 5px;\n");
      out.write("            }\n");
      out.write("            #result {\n");
      out.write("                font-size: 18px;\n");
      out.write("                font-weight: bold;\n");
      out.write("            }\n");
      out.write("        </style>\n");
      out.write("        <script>\n");
      out.write("            function validateForm() {\n");
      out.write("                var num1 = document.getElementById(\"num1\").value;\n");
      out.write("                var num2 = document.getElementById(\"num2\").value;\n");
      out.write("                var operation = document.getElementById(\"operation\").value;\n");
      out.write("\n");
      out.write("                if (isNaN(num1) || isNaN(num2)) {\n");
      out.write("                    alert(\"Please enter valid numeric values.\");\n");
      out.write("                    return false;\n");
      out.write("                }\n");
      out.write("\n");
      out.write("                if (operation === \"\") {\n");
      out.write("                    alert(\"Please select an operation.\");\n");
      out.write("                    return false;\n");
      out.write("                }\n");
      out.write("\n");
      out.write("                return true;\n");
      out.write("            }\n");
      out.write("        </script>\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("        <div class=\"container\">\n");
      out.write("            <h1>Calculator Result</h1>\n");
      out.write("            <form>\n");
      out.write("                <table>\n");
      out.write("                    <tr>\n");
      out.write("                        <td><label for=\"firstvalue\">Enter first value</label></td>\n");
      out.write("                        <td><input type=\"text\" id=\"firstvalue\" name=\"firstnumber\" value=\"");
      out.print( (request.getParameter("firstnumber") != null) ? request.getParameter("firstnumber") : "");
      out.write("\" readonly></td>\n");
      out.write("                    </tr>\n");
      out.write("                    <tr>\n");
      out.write("                        <td><label>Select operation</label></td>\n");
      out.write("                        <td>\n");
      out.write("                            <div class=\"custom-radio\">\n");
      out.write("                                <input type=\"radio\" id=\"addition\" value=\"+\" name=\"operation\" ");
      out.print( (request.getParameter("operation") != null && request.getParameter("operation").equals("addition")) ? "checked" : "");
      out.write(" disabled>\n");
      out.write("                                <label class=\"radio-label ");
      out.print( (request.getParameter("operation") != null && request.getParameter("operation").equals("addition")) ? "selected" : "");
      out.write("\" for=\"addition\">+</label>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"custom-radio\">\n");
      out.write("                                <input type=\"radio\" id=\"substraction\" value=\"*\" name=\"operation\" ");
      out.print( (request.getParameter("operation") != null && request.getParameter("operation").equals("substraction")) ? "checked" : "");
      out.write(" disabled>\n");
      out.write("                                <label class=\"radio-label ");
      out.print( (request.getParameter("operation") != null && request.getParameter("operation").equals("substraction")) ? "selected" : "");
      out.write("\" for=\"substraction\">-</label>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"custom-radio\">\n");
      out.write("                                <input type=\"radio\" id=\"multiplication\" value=\"*\" name=\"operation\" ");
      out.print( (request.getParameter("operation") != null && request.getParameter("operation").equals("multiplication")) ? "checked" : "");
      out.write(" disabled>\n");
      out.write("                                <label class=\"radio-label ");
      out.print( (request.getParameter("operation") != null && request.getParameter("operation").equals("multiplication")) ? "selected" : "");
      out.write("\" for=\"multiplication\">×</label>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"custom-radio\">\n");
      out.write("                                <input type=\"radio\" id=\"division\" value=\"/\" name=\"operation\" ");
      out.print( (request.getParameter("operation") != null && request.getParameter("operation").equals("division")) ? "checked" : "");
      out.write(" disabled>\n");
      out.write("                                <label class=\"radio-label ");
      out.print( (request.getParameter("operation") != null && request.getParameter("operation").equals("division")) ? "selected" : "");
      out.write("\" for=\"division\">÷</label>\n");
      out.write("                            </div>\n");
      out.write("                        </td>\n");
      out.write("                    </tr>\n");
      out.write("                    <tr>\n");
      out.write("                        <td><label for=\"secondvalue\">Enter second value</label></td>\n");
      out.write("                        <td><input type=\"text\" id=\"secondnumber\" name=\"secondnumber\" value=\"");
      out.print( (request.getParameter("secondnumber") != null) ? request.getParameter("secondnumber") : "");
      out.write("\" readonly></td>\n");
      out.write("                    </tr>\n");
      out.write("                    <tr>\n");
      out.write("                        <td colspan=\"2\" align=\"center\">\n");
      out.write("                            <div class=\"btn-container\">\n");
      out.write("                                ");

                                    if (request.getParameter("firstnumber") != null && request.getParameter("secondnumber") != null && request.getParameter("operation") != null) {
                                        try {
                                            double firstNumber = Double.parseDouble(request.getParameter("firstnumber"));
                                            double secondNumber = Double.parseDouble(request.getParameter("secondnumber"));
                                            String operation = request.getParameter("operation");

                                            calculator.setNumber1(firstNumber);
                                            calculator.setNumber2(secondNumber);
                                            calculator.setOperation(operation);

                                            double result = calculator.calculateResult();
                                            String resultFormate = String.format("%.2f", result);

                                
      out.write("\n");
      out.write("                                <p>RESULT : ");
      out.print( resultFormate);
      out.write("</p>\n");
      out.write("                                ");

                                        } catch (NumberFormatException e) {
                                            e.printStackTrace();
                                        }
                                    }
                                
      out.write("\n");
      out.write("                            </div>\n");
      out.write("                        </td>\n");
      out.write("                    </tr>\n");
      out.write("                </table>\n");
      out.write("            </form>\n");
      out.write("\n");
      out.write("        </div>\n");
      out.write("    </body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
