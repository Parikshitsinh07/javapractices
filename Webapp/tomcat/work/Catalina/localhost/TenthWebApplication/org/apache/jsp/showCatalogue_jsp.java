/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.85
 * Generated at: 2024-04-15 04:55:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.Connection;

public final class showCatalogue_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.sql.Statement");
    _jspx_imports_classes.add("java.sql.DriverManager");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("        <title>Show Catalogue</title>\n");
      out.write("        <style>\n");
      out.write("            body {\n");
      out.write("                font-family: Arial, sans-serif;\n");
      out.write("                background-color: #f2f2f2;\n");
      out.write("                margin: 0;\n");
      out.write("                padding: 0;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .container {\n");
      out.write("                display: flex;\n");
      out.write("                align-items: stretch;\n");
      out.write("                justify-content: center;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .menu-bar {\n");
      out.write("                background-color: #607d8b;\n");
      out.write("                color: #fff;\n");
      out.write("                padding: 20px;\n");
      out.write("                margin-right: 20px;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .menu-bar a {\n");
      out.write("                display: block;\n");
      out.write("                color: #fff;\n");
      out.write("                text-decoration: none;\n");
      out.write("                margin-bottom: 10px;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .menu-bar a:hover {\n");
      out.write("                background-color: #455a64;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .content {\n");
      out.write("                background-color: #fff;\n");
      out.write("                box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\n");
      out.write("                margin: auto;\n");
      out.write("                padding: 30px;\n");
      out.write("                max-width: 1000px;\n");
      out.write("                border-radius: 5px;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            h1 {\n");
      out.write("                color: #607d8b;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            table {\n");
      out.write("                width: 100%;\n");
      out.write("                border-collapse: collapse;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            th, td {\n");
      out.write("                padding: 10px;\n");
      out.write("                border-bottom: 1px solid #ccc;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            th {\n");
      out.write("                background-color: #f2f2f2;\n");
      out.write("                color: #607d8b;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            td {\n");
      out.write("                background-color: #fff;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .edit-link i,\n");
      out.write("            .delete-link i {\n");
      out.write("                color: #607d8b; \n");
      out.write("                transition: color 0.3s;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .edit-link:hover i,\n");
      out.write("            .delete-link:hover i {\n");
      out.write("                color: #41545e; \n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .menu-bar {\n");
      out.write("                background-color: #607d8b;\n");
      out.write("                color: #fff;\n");
      out.write("                flex: 0 0 200px;\n");
      out.write("                padding: 20px;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .menu-bar h1 {\n");
      out.write("                color: #fff; \n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .menu-bar a {\n");
      out.write("                color: #fff; \n");
      out.write("                display: block;\n");
      out.write("                text-decoration: none;\n");
      out.write("                padding: 10px;\n");
      out.write("                margin-bottom: 10px;\n");
      out.write("                transition: background-color 0.3s;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .menu-bar a:hover {\n");
      out.write("                background-color: #455a64;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .menu-bar a i.fa-edit {\n");
      out.write("                color: #607d8b !important;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .menu-bar a:hover i.fa-edit {\n");
      out.write("                color: #ee4b2b !important;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .menu-bar a i.fa-trash-alt {\n");
      out.write("                color: #607d8b !important;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .menu-bar a:hover i.fa-trash-alt {\n");
      out.write("                color: #ee4b2b !important;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("        </style>\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("        <div class=\"container\">\n");
      out.write("            ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "index.jsp", out, false);
      out.write("\n");
      out.write("            <div class=\"content\">\n");
      out.write("                <h1>Catalogue Details</h1><br>\n");
      out.write("                <table>\n");
      out.write("                    <thead>\n");
      out.write("\n");
      out.write("                        <tr>\n");
      out.write("                            <th>Catalogue Id</th>\n");
      out.write("                            <th>Catalogue Title</th>\n");
      out.write("                            <th>Description</th>\n");
      out.write("                            <th></th>\n");
      out.write("                            <th></th>\n");
      out.write("                        </tr>\n");
      out.write("\n");
      out.write("                    </thead>\n");
      out.write("                    <tbody>\n");
      out.write("                        ");

                            try {
                                Class.forName("com.mysql.cj.jdbc.Driver");
                                Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/parikshit_20", "root", "");
                                Statement stmt = conn.createStatement();
                                ResultSet rs = stmt.executeQuery("SELECT * FROM catalogue");

                                while (rs.next()) {
                                    String catalogueId = rs.getString("catalogueId");
                                    String title = rs.getString("title");
                                    String description = rs.getString("description");
                        
      out.write("\n");
      out.write("                        <tr>\n");
      out.write("                            <td>");
      out.print( catalogueId);
      out.write("</td>\n");
      out.write("                            <td>");
      out.print( title);
      out.write("</td>\n");
      out.write("                            <td>");
      out.print( description);
      out.write("</td>\n");
      out.write("                            <td><a href=\"updateCatalogue.jsp?id=");
      out.print( catalogueId);
      out.write("\" class=\"edit-link\"><i class=\"fas fa-edit\"></i></a></td>\n");
      out.write("                            <td><a href=\"#\" class=\"delete-link\" onclick=\"showConfirmation('");
      out.print( catalogueId);
      out.write("')\"><i class=\"fas fa-trash-alt\"></i></a></td>\n");
      out.write("                        </tr>\n");
      out.write("                        ");

                                }
                                rs.close();
                                stmt.close();
                                conn.close();
                            } catch (Exception e) {
                                e.printStackTrace();
                            }
                        
      out.write("\n");
      out.write("                    </tbody>\n");
      out.write("                </table>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        <script>\n");
      out.write("            function showConfirmation(catalogueId) {\n");
      out.write("                var confirmDelete = confirm(\"Are you sure you want to delete this catalogue?\");\n");
      out.write("                if (confirmDelete) {\n");
      out.write("                    window.location.href = \"deleteCatalogue.jsp?id=\" + catalogueId;\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("        </script>\n");
      out.write("    </body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
